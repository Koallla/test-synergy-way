# version: "3.9"
# services:
#   db:
#     restart: always
#     image: postgres
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=mydatabaseuser
#       - POSTGRES_PASSWORD=admin
#     ports:
#       - "8000:8000"
#     networks:
#       - db-net

#   synergy:
#     restart: always
#     container_name: code
#     command:
#       bash -c "python check_db.py --service-name db --ip db --port 8000 &&
#       python manage.py migrate &&
#       python manage.py runserver 0.0.0.0:8000"
#     # env_file:
#     #   - ../mysite/settings.ini
#     build:
#       context: ./synergy/
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     networks:
#       - db-net

#   frontend:
#     restart: always
#     command: npm start
#     container_name: front
#     build:
#       context: ./frontend/
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"
#     stdin_open: true
#     depends_on:
#       - synergy
#     networks:
#       - db-net

# networks:
#   db-net:
#     driver: bridg

version: "3.7"
services:
  db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=storagebase
      - POSTGRES_USER=mydatabaseuser
      - POSTGRES_PASSWORD=admin

  synergy:
    restart: always
    command: "python manage.py runserver 0.0.0.0:8000"
    # env_file:
    #   - ../mysite/settings.ini
    build:
      context: ./mysite
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "8000:8000"

  frontend:
    restart: always
    command: npm start
    container_name: front
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - synergy
